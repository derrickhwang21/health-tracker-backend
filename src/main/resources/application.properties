##########################################################################
# Use this setup when deployed to Heroku cloud platform
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.platform=postgres
spring.datasource.url=jdbc:${DATABASE_URL}
# Above line depends on an environment variable that must be defined in Heroku.
# Optional: below line will drop and recreate tables each time the app is started. Good for development.
spring.jpa.hibernate.ddl-auto=create
##### END OF SECTION


##########################################################################
# Use this setup to run locally in a Mac development environment
# Pre-condition: the database exists, with no tables.
# spring.datasource.platform=postgres
# spring.datasource.url=jdbc:postgresql://localhost/database_name
# Optional: below line will drop and recreate tables each time the app is started. Good for development.
# spring.jpa.hibernate.ddl-auto=create
##### END OF SECTION


##########################################################################
# Use this setup to run locally in a Windows development environment
# spring.datasource.platform=postgres
# spring.datasource.url=jdbc:postgresql://localhost/healthtracker_app
# Or spring.datasource.url=jdbc:${DATABASE_URL}
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
# Above two lines depend on windows environment variables. Optionally, you can hard configure them here.
# Alternatively, you can pass in command line args like this:
# --DATABASE_URL="postgresql://localhost/healthtracker_app" --SPRING_DATASOURCE_USERNAME="your database name" --SPRING_DATASOURCE_PASSWORD="your database password"
# Optional: below line will drop and recreate tables each time the app is started. Good for development.
# spring.jpa.hibernate.ddl-auto=create
##### END OF SECTION